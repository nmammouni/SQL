-- MySQL Script generated by MySQL Workbench
-- Tue May 10 17:21:43 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Big_Bang_DB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Big_Bang_DB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Big_Bang_DB` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `Big_Bang_DB` ;

-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`dates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`dates` (
  `id` INT NOT NULL,
  `months` INT NULL DEFAULT NULL,
  `days` INT NULL DEFAULT NULL,
  `years` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`Description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`Description` (
  `desc_id` INT NOT NULL,
  `description` VARCHAR(1024) NULL DEFAULT NULL,
  PRIMARY KEY (`desc_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`gender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`gender` (
  `id` INT NOT NULL,
  `gender` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`director` (
  `director_id` INT NOT NULL,
  `directed_by` VARCHAR(64) NULL DEFAULT NULL,
  `Director_Dummy` INT NULL DEFAULT NULL,
  PRIMARY KEY (`director_id`),
  INDEX `dir_gen_fk` (`Director_Dummy` ASC) VISIBLE,
  CONSTRAINT `dir_gen_fk`
    FOREIGN KEY (`Director_Dummy`)
    REFERENCES `Big_Bang_DB`.`gender` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`episode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`episode` (
  `id_episode` INT NOT NULL,
  `name_episode` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`id_episode`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`season`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`season` (
  `id_season` INT NOT NULL,
  `name_season` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`id_season`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`rate_level`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`rate_level` (
  `id_rate` INT NOT NULL,
  `level` VARCHAR(128) NULL DEFAULT NULL,
  PRIMARY KEY (`id_rate`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`IMDB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`IMDB` (
  `id` INT NOT NULL,
  `imdb_rating` FLOAT NULL DEFAULT NULL,
  `total_votes` INT NULL DEFAULT NULL,
  `Rating_DUMMY` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `IMDB_rate_fk` (`Rating_DUMMY` ASC) VISIBLE,
  CONSTRAINT `IMDB_rate_fk`
    FOREIGN KEY (`Rating_DUMMY`)
    REFERENCES `Big_Bang_DB`.`rate_level` (`id_rate`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`Big_Bang_Theory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`Big_Bang_Theory` (
  `id` INT NOT NULL,
  `id_season` INT NULL DEFAULT NULL,
  `id_episode` INT NULL DEFAULT NULL,
  `director_id` INT NULL DEFAULT NULL,
  `title` VARCHAR(256) NULL DEFAULT NULL,
  `prod_code` VARCHAR(64) NULL DEFAULT NULL,
  `us_viewers` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `Big_Bang_Theory_episode_fk` (`id_episode` ASC) VISIBLE,
  INDEX `Big_Bang_Theory_season_fk` (`id_season` ASC) VISIBLE,
  INDEX `Big_Bang_Theory_director_fk` (`director_id` ASC) VISIBLE,
  CONSTRAINT `big_bang_dates_fk`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`dates` (`id`),
  CONSTRAINT `big_bang_discription_fk`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`Description` (`desc_id`),
  CONSTRAINT `big_bang_imdb_fk`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`imdb` (`id`),
  CONSTRAINT `Big_Bang_Theory_director_fk`
    FOREIGN KEY (`director_id`)
    REFERENCES `Big_Bang_DB`.`director` (`director_id`),
  CONSTRAINT `Big_Bang_Theory_episode_fk`
    FOREIGN KEY (`id_episode`)
    REFERENCES `Big_Bang_DB`.`Episode` (`id_episode`),
  CONSTRAINT `Big_Bang_Theory_season_fk`
    FOREIGN KEY (`id_season`)
    REFERENCES `Big_Bang_DB`.`Season` (`id_season`),
  CONSTRAINT `fk_Big_Bang_Theory_episode1`
    FOREIGN KEY (`id_episode`)
    REFERENCES `Big_Bang_DB`.`episode` (`id_episode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Big_Bang_Theory_season1`
    FOREIGN KEY (`id_season`)
    REFERENCES `Big_Bang_DB`.`season` (`id_season`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Big_Bang_Theory_IMDB1`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`IMDB` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`writer_story`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`writer_story` (
  `id_storyby` INT NOT NULL,
  `writer_name` VARCHAR(128) NULL DEFAULT NULL,
  PRIMARY KEY (`id_storyby`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`join_storyby`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`join_storyby` (
  `id` INT NULL DEFAULT NULL,
  `id_storyby` INT NULL DEFAULT NULL,
  INDEX `Big_Bang_storyby_join_fk` (`id` ASC) VISIBLE,
  INDEX `storyby_join_fk` (`id_storyby` ASC) VISIBLE,
  CONSTRAINT `Big_Bang_storyby_join_fk`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`Big_Bang_Theory` (`id`),
  CONSTRAINT `storyby_join_fk`
    FOREIGN KEY (`id_storyby`)
    REFERENCES `Big_Bang_DB`.`writer_story` (`id_storyby`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`writer_teleplay`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`writer_teleplay` (
  `id_teleplay` INT NOT NULL,
  `writer_name` VARCHAR(128) NULL DEFAULT NULL,
  PRIMARY KEY (`id_teleplay`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `Big_Bang_DB`.`join_teleplay`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Big_Bang_DB`.`join_teleplay` (
  `id` INT NULL DEFAULT NULL,
  `id_teleplay` INT NULL DEFAULT NULL,
  INDEX `Big_Bang_teleplay_join_fk` (`id` ASC) VISIBLE,
  INDEX `teleplay_join_fk` (`id_teleplay` ASC) VISIBLE,
  CONSTRAINT `Big_Bang_teleplay_join_fk`
    FOREIGN KEY (`id`)
    REFERENCES `Big_Bang_DB`.`Big_Bang_Theory` (`id`),
  CONSTRAINT `teleplay_join_fk`
    FOREIGN KEY (`id_teleplay`)
    REFERENCES `Big_Bang_DB`.`writer_teleplay` (`id_teleplay`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `Big_Bang_DB` ;

-- -----------------------------------------------------
-- procedure gender_ave_max_min_imdb_rate
-- -----------------------------------------------------

DELIMITER $$
USE `Big_Bang_DB`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `gender_ave_max_min_imdb_rate`(
	IN season INT, 
	OUT average_rate FLOAT,
	OUT max_rate FLOAT,
	OUT min_rate FLOAT
)
BEGIN
    
	SELECT AVG(imdb_rating), max(imdb_rating), min(imdb_rating)  
    FROM Big_Bang_Theory AS b
	INNER JOIN season USING(id_season)   
	INNER JOIN IMDB ON  b.id = IMDB.id
    WHERE season.id_season = season
	GROUP BY gender, name_season
	ORDER BY name_season; 
    
    
    SET average_rate = AVG(imdb_rating);
    SET max_rate = max(imdb_rating);
    SET min_rate = min(imdb_rating);

    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function max_imdb_rate_writer
-- -----------------------------------------------------

DELIMITER $$
USE `Big_Bang_DB`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `max_imdb_rate_writer`(
	name_writer VARCHAR(128) 
) RETURNS float
    READS SQL DATA
    DETERMINISTIC
BEGIN 
	DECLARE rate FLOAT;
    
    SELECT max(imdb_rating)
    INTO rate
	FROM Big_Bang_Theory AS b 
	INNER JOIN join_storyby USING(id)
	INNER JOIN writer_story USING(id_storyby) 
	INNER JOIN IMDB USING (id)
	WHERE writer_name = name_writer 
	GROUP BY writer_name;
    
    
    RETURN rate; 
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure season8_ave_max_min_imdb_rate
-- -----------------------------------------------------

DELIMITER $$
USE `Big_Bang_DB`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `season8_ave_max_min_imdb_rate`()
BEGIN

DECLARE season VARCHAR(64);
DECLARE viewers_avg FLOAT; 
DECLARE IMDB_avg FLOAT;
DECLARE IMDB_max FLOAT; 
DECLARE IMDB_min FLOAT; 

	SELECT 
	name_season, 
    ROUND(avg(us_viewers),0) AS Average_Viewers, 
    ROUND(AVG(imdb_rating), 1) AS Average_rate, 
    max(imdb_rating) AS max_rate, 
    min(imdb_rating) AS min_rate 
    INTO 
    season, viewers_avg, IMDB_avg, IMDB_max, IMDB_min  
	FROM Big_Bang_Theory AS b
	INNER JOIN director USING (director_id) 
	INNER JOIN season USING(id_season)   
	INNER JOIN IMDB ON  b.id = IMDB.id
	WHERE name_season = "season 08"; 
    
    
SELECT season, viewers_avg, IMDB_avg, IMDB_max, IMDB_min;
    
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
